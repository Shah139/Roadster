<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/pom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/pom.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 &#10;         http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#10;    &lt;groupId&gt;com.roadster&lt;/groupId&gt;&#10;    &lt;artifactId&gt;roadster-demo&lt;/artifactId&gt;&#10;    &lt;version&gt;1.0.0&lt;/version&gt;&#10;    &lt;packaging&gt;jar&lt;/packaging&gt;&#10;&#10;    &lt;name&gt;Roadster JavaFX Demo&lt;/name&gt;&#10;    &lt;description&gt;A JavaFX demo application for the Roadster project&lt;/description&gt;&#10;&#10;    &lt;properties&gt;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#10;        &lt;javafx.version&gt;17.0.2&lt;/javafx.version&gt;&#10;    &lt;/properties&gt;&#10;&#10;    &lt;dependencies&gt;&#10;        &lt;!-- JavaFX Dependencies --&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-controls&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-fxml&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-graphics&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-base&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;&#10;&#10;    &lt;build&gt;&#10;        &lt;plugins&gt;&#10;            &lt;!-- Maven Compiler Plugin --&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;3.11.0&lt;/version&gt;&#10;                &lt;configuration&gt;&#10;                    &lt;source&gt;17&lt;/source&gt;&#10;                    &lt;target&gt;17&lt;/target&gt;&#10;                &lt;/configuration&gt;&#10;            &lt;/plugin&gt;&#10;&#10;            &lt;!-- JavaFX Maven Plugin --&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;                &lt;artifactId&gt;javafx-maven-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;0.0.8&lt;/version&gt;&#10;                &lt;configuration&gt;&#10;                    &lt;mainClass&gt;com.roadster.Main&lt;/mainClass&gt;&#10;                &lt;/configuration&gt;&#10;            &lt;/plugin&gt;&#10;&#10;            &lt;!-- Maven Shade Plugin for creating executable JAR --&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;3.4.1&lt;/version&gt;&#10;                &lt;executions&gt;&#10;                    &lt;execution&gt;&#10;                        &lt;phase&gt;package&lt;/phase&gt;&#10;                        &lt;goals&gt;&#10;                            &lt;goal&gt;shade&lt;/goal&gt;&#10;                        &lt;/goals&gt;&#10;                        &lt;configuration&gt;&#10;                            &lt;transformers&gt;&#10;                                &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;&#10;                                    &lt;mainClass&gt;com.roadster.Main&lt;/mainClass&gt;&#10;                                &lt;/transformer&gt;&#10;                            &lt;/transformers&gt;&#10;                        &lt;/configuration&gt;&#10;                    &lt;/execution&gt;&#10;                &lt;/executions&gt;&#10;            &lt;/plugin&gt;&#10;        &lt;/plugins&gt;&#10;    &lt;/build&gt;&#10;&lt;/project&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 &#10;         http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#10;    &lt;groupId&gt;com.roadster&lt;/groupId&gt;&#10;    &lt;artifactId&gt;roadster-demo&lt;/artifactId&gt;&#10;    &lt;version&gt;1.0.0&lt;/version&gt;&#10;    &lt;packaging&gt;jar&lt;/packaging&gt;&#10;&#10;    &lt;name&gt;Roadster JavaFX Demo&lt;/name&gt;&#10;    &lt;description&gt;A JavaFX demo application for the Roadster project&lt;/description&gt;&#10;&#10;    &lt;properties&gt;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#10;        &lt;javafx.version&gt;17.0.6&lt;/javafx.version&gt;&#10;    &lt;/properties&gt;&#10;&#10;    &lt;dependencies&gt;&#10;        &lt;!-- JavaFX Dependencies --&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-controls&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-fxml&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-graphics&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-base&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javafx-web&lt;/artifactId&gt;&#10;            &lt;version&gt;${javafx.version}&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;&#10;&#10;    &lt;build&gt;&#10;        &lt;plugins&gt;&#10;            &lt;!-- Maven Compiler Plugin --&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;3.11.0&lt;/version&gt;&#10;                &lt;configuration&gt;&#10;                    &lt;source&gt;17&lt;/source&gt;&#10;                    &lt;target&gt;17&lt;/target&gt;&#10;                &lt;/configuration&gt;&#10;            &lt;/plugin&gt;&#10;&#10;            &lt;!-- JavaFX Maven Plugin --&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.openjfx&lt;/groupId&gt;&#10;                &lt;artifactId&gt;javafx-maven-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;0.0.8&lt;/version&gt;&#10;                &lt;configuration&gt;&#10;                    &lt;mainClass&gt;com.roadster.Main&lt;/mainClass&gt;&#10;                &lt;/configuration&gt;&#10;            &lt;/plugin&gt;&#10;&#10;            &lt;!-- Maven Shade Plugin for creating executable JAR --&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;3.4.1&lt;/version&gt;&#10;                &lt;executions&gt;&#10;                    &lt;execution&gt;&#10;                        &lt;phase&gt;package&lt;/phase&gt;&#10;                        &lt;goals&gt;&#10;                            &lt;goal&gt;shade&lt;/goal&gt;&#10;                        &lt;/goals&gt;&#10;                        &lt;configuration&gt;&#10;                            &lt;transformers&gt;&#10;                                &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;&#10;                                    &lt;mainClass&gt;com.roadster.Main&lt;/mainClass&gt;&#10;                                &lt;/transformer&gt;&#10;                            &lt;/transformers&gt;&#10;                        &lt;/configuration&gt;&#10;                    &lt;/execution&gt;&#10;                &lt;/executions&gt;&#10;            &lt;/plugin&gt;&#10;        &lt;/plugins&gt;&#10;    &lt;/build&gt;&#10;&lt;/project&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/roadster/controllers/MainController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/roadster/controllers/MainController.java" />
              <option name="originalContent" value="package com.roadster.controllers;&#10;&#10;import javafx.fxml.FXML;&#10;import javafx.scene.layout.BorderPane;&#10;import javafx.scene.control.ToolBar;&#10;import com.roadster.views.*;&#10;&#10;/**&#10; * Main Controller - Handles navigation between different views&#10; * This is the central controller for the application&#10; */&#10;public class MainController {&#10;    &#10;    @FXML&#10;    private BorderPane mainContainer;&#10;&#10;    &#10;    // View instances&#10;    private LoginView loginView;&#10;    private DashboardView dashboardView;&#10;    private DriversView driversView;&#10;    private MapsView mapsView;&#10;    private PoliceBoxView policeBoxView;&#10;    private UserProfileView userProfileView;&#10;    &#10;    @FXML&#10;    public void initialize() {&#10;        // Initialize all views&#10;        loginView = new LoginView(this);&#10;        dashboardView = new DashboardView(this);&#10;        driversView = new DriversView(this);&#10;        mapsView = new MapsView(this);&#10;        policeBoxView = new PoliceBoxView(this);&#10;        userProfileView = new UserProfileView();&#10;        &#10;        // Set default view (login)&#10;        showLoginView();&#10;&#10;    }&#10;&#10;    &#10;    @FXML&#10;    private void showLoginView() {&#10;        mainContainer.setCenter(loginView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showDashboardView() {&#10;        mainContainer.setCenter(dashboardView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showDriversView() {&#10;        mainContainer.setCenter(driversView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showMapsView() {&#10;        mainContainer.setCenter(mapsView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showPoliceBoxView() {&#10;        mainContainer.setCenter(policeBoxView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showUserProfileView() {&#10;        mainContainer.setCenter(userProfileView);&#10;    }&#10;} " />
              <option name="updatedContent" value="package com.roadster.controllers;&#10;&#10;import javafx.fxml.FXML;&#10;import javafx.fxml.FXMLLoader;&#10;import javafx.scene.layout.BorderPane;&#10;import javafx.scene.control.ToolBar;&#10;import javafx.scene.Parent;&#10;import com.roadster.views.*;&#10;import java.io.IOException;&#10;&#10;/**&#10; * Main Controller - Handles navigation between different views&#10; * This is the central controller for the application&#10; */&#10;public class MainController {&#10;    &#10;    @FXML&#10;    private BorderPane mainContainer;&#10;&#10;    &#10;    // View instances&#10;    private LoginView loginView;&#10;    private DashboardView dashboardView;&#10;    private DriversView driversView;&#10;    private Parent mapsView; // Changed to Parent for FXML-loaded view&#10;    private MapsController mapsController; // Reference to the maps controller&#10;    private PoliceBoxView policeBoxView;&#10;    private UserProfileView userProfileView;&#10;    &#10;    @FXML&#10;    public void initialize() {&#10;        // Initialize all views&#10;        loginView = new LoginView(this);&#10;        dashboardView = new DashboardView(this);&#10;        driversView = new DriversView(this);&#10;        policeBoxView = new PoliceBoxView(this);&#10;        userProfileView = new UserProfileView();&#10;        &#10;        // Initialize FXML-based maps view&#10;        initializeMapsView();&#10;        &#10;        // Set default view (login)&#10;        showLoginView();&#10;    }&#10;    &#10;    private void initializeMapsView() {&#10;        try {&#10;            FXMLLoader loader = new FXMLLoader(getClass().getResource(&quot;/fxml/MapsView.fxml&quot;));&#10;            mapsView = loader.load();&#10;            mapsController = loader.getController();&#10;            mapsController.setMainController(this);&#10;        } catch (IOException e) {&#10;            System.err.println(&quot;Error loading MapsView.fxml: &quot; + e.getMessage());&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    &#10;    @FXML&#10;    private void showLoginView() {&#10;        mainContainer.setCenter(loginView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showDashboardView() {&#10;        mainContainer.setCenter(dashboardView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showDriversView() {&#10;        mainContainer.setCenter(driversView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showMapsView() {&#10;        if (mapsView != null) {&#10;            mainContainer.setCenter(mapsView);&#10;        } else {&#10;            System.err.println(&quot;MapsView is not properly initialized&quot;);&#10;        }&#10;    }&#10;    &#10;    @FXML&#10;    public void showPoliceBoxView() {&#10;        mainContainer.setCenter(policeBoxView);&#10;    }&#10;    &#10;    @FXML&#10;    public void showUserProfileView() {&#10;        mainContainer.setCenter(userProfileView);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/roadster/controllers/MapsController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/roadster/controllers/MapsController.java" />
              <option name="updatedContent" value="package com.roadster.controllers;&#10;&#10;import com.roadster.controllers.MainController;&#10;import javafx.fxml.FXML;&#10;import javafx.fxml.Initializable;&#10;import javafx.scene.control.Button;&#10;import javafx.scene.web.WebView;&#10;import javafx.scene.web.WebEngine;&#10;import javafx.concurrent.Worker;&#10;&#10;import java.net.URL;&#10;import java.util.ResourceBundle;&#10;&#10;public class MapsController implements Initializable {&#10;    @FXML&#10;    private WebView mapWebView;&#10;&#10;    @FXML&#10;    private Button backButton;&#10;&#10;    private WebEngine webEngine;&#10;    private MainController mainController;&#10;&#10;    public void setMainController(MainController mainController) {&#10;        this.mainController = mainController;&#10;    }&#10;&#10;    @Override&#10;    public void initialize(URL url, ResourceBundle resourceBundle) {&#10;        webEngine = mapWebView.getEngine();&#10;&#10;        // Load the map HTML file&#10;        URL mapUrl = getClass().getResource(&quot;/html/map.html&quot;);&#10;        if (mapUrl != null) {&#10;            webEngine.load(mapUrl.toString());&#10;            System.out.println(&quot;Loading map from: &quot; + mapUrl.toString());&#10;        } else {&#10;            System.err.println(&quot;Could not find map.html file&quot;);&#10;        }&#10;&#10;        // Enable JavaScript&#10;        webEngine.setJavaScriptEnabled(true);&#10;&#10;        // Wait for page to load before enabling interactions&#10;        webEngine.getLoadWorker().stateProperty().addListener((obs, oldState, newState) -&gt; {&#10;            if (newState == Worker.State.SUCCEEDED) {&#10;                System.out.println(&quot;Map loaded successfully!&quot;);&#10;            } else if (newState == Worker.State.FAILED) {&#10;                System.err.println(&quot;Failed to load map&quot;);&#10;            }&#10;        });&#10;    }&#10;&#10;    @FXML&#10;    protected void onBackToDashboard() {&#10;        if (mainController != null) {&#10;            mainController.showDashboardView();&#10;        }&#10;    }&#10;&#10;    // Method to add a marker (for future use when receiving location data)&#10;    public void addMarker(double lat, double lng, String popupText) {&#10;        if (webEngine != null) {&#10;            String script = String.format(&quot;window.mapFunctions.addMarker(%f, %f, '%s');&quot;, lat, lng, popupText);&#10;            webEngine.executeScript(script);&#10;        }&#10;    }&#10;&#10;    // Method to center map on specific coordinates (for future use)&#10;    public void centerMap(double lat, double lng) {&#10;        if (webEngine != null) {&#10;            String script = String.format(&quot;window.mapFunctions.centerMap(%f, %f, 15);&quot;, lat, lng);&#10;            webEngine.executeScript(script);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/fxml/MapsView.fxml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/fxml/MapsView.fxml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&#10;&lt;?import javafx.geometry.Insets?&gt;&#10;&lt;?import javafx.scene.control.Label?&gt;&#10;&lt;?import javafx.scene.control.Button?&gt;&#10;&lt;?import javafx.scene.layout.VBox?&gt;&#10;&lt;?import javafx.scene.layout.HBox?&gt;&#10;&lt;?import javafx.scene.layout.BorderPane?&gt;&#10;&lt;?import javafx.scene.web.WebView?&gt;&#10;&#10;&lt;BorderPane xmlns:fx=&quot;http://javafx.com/fxml&quot; fx:controller=&quot;com.roadster.controllers.MapsController&quot;&gt;&#10;&#10;    &lt;!-- Header at the top --&gt;&#10;    &lt;top&gt;&#10;        &lt;VBox spacing=&quot;15.0&quot; style=&quot;-fx-background-color: #ffffff; -fx-padding: 20; -fx-border-color: #e0e0e0; -fx-border-width: 0 0 1 0;&quot;&gt;&#10;            &lt;!-- Header with logo and back button --&gt;&#10;            &lt;HBox spacing=&quot;20.0&quot; alignment=&quot;CENTER_LEFT&quot;&gt;&#10;                &lt;Button fx:id=&quot;backButton&quot; text=&quot;← Back to Dashboard&quot; onAction=&quot;#onBackToDashboard&quot; &#10;                        style=&quot;-fx-background-color: #3498db; -fx-text-fill: white; -fx-padding: 10 20; -fx-border-radius: 5; -fx-background-radius: 5;&quot;/&gt;&#10;                &#10;                &lt;Label text=&quot;Interactive Map&quot; &#10;                       style=&quot;-fx-font-size: 24px; -fx-font-weight: bold; -fx-text-fill: #2c3e50;&quot;/&gt;&#10;            &lt;/HBox&gt;&#10;        &lt;/VBox&gt;&#10;    &lt;/top&gt;&#10;&#10;    &lt;!-- Map WebView in the center --&gt;&#10;    &lt;center&gt;&#10;        &lt;WebView fx:id=&quot;mapWebView&quot;/&gt;&#10;    &lt;/center&gt;&#10;&#10;&lt;/BorderPane&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>